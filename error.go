// Copyright (C) 2016 Great Beyond AB - All Rights Reserved
// Unauthorized copying of this file, via any medium is strictly prohibited
// Proprietary and confidential
// Written by David Högborg <d@greatbeyond.se>, 2016

package mailchimp

import "fmt"

// Error holds information about a failed call.
// You should cast this to a mailchimp.Error to gain more information
// about the status of your request.
//
//  if err != nil {
//      if err, ok := err.(mailchimp.Error); ok {
//          if err.Status == http.StatusNotFound {
//              return nil // we don't care about this error
//          }
//      }
//      return err
//  }
type Error struct {
	// An absolute URI that identifies the problem type. When dereferenced,
	// it should provide human-readable documentation for the problem type.
	Type string `json:"type"`

	// A short, human-readable summary of the problem type. It shouldn’t
	// change based on the occurrence of the problem, except for purposes of localization.
	Title string `json:"title"`

	// The HTTP status code (RFC2616, Section 6) generated by the
	// origin server for this occurrence of the problem.
	Status int `json:"status"`

	// A human-readable explanation specific to this occurrence of the
	// problem. Learn more about errors.
	Detail string `json:"detail"`

	// A string that identifies this specific occurrence of the problem.
	// Please provide this ID when contacting support.
	Instance string `json:"instance"`
}

// ErrorNoClient will be returned when the receiver has no client
// assigned by parent. Always create api objects by reteriveing
// them from the Client object. You can assign the client manually
// at creation with Object{client: myClient}.
var ErrorNoClient = fmt.Errorf("no client assigned by parent")

func (e Error) Error() string {
	return fmt.Sprintf("%s (%d): %s", e.Title, e.Status, e.Detail)
}
